% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ccode.R
\docType{data}
\name{countrycode_dict}
\alias{countrycode_dict}
\title{conversion table for country codes, editable}
\format{
An object of class \code{list} of length 6.
}
\usage{
countrycode_dict
}
\description{
conversion table for country codes, editable
}
\details{
the countrycode_dict object holds the conversion table for countrycodes, and the country group lists
The object has the following subfunctions:
\itemize{
  \item \code{countrycode_dict$get()} data.frame with country code conversion table
  \item \code{countrycode_dict$set(x)} set the data.frame with country code conversion table equal to x
  \item \code{countrycode_dict$update(srccsv=NULL)} update \code{countrycode_dict} to the latest country code conversion table from internet. Either this is a character path/URL to a CSV, or a data.frame
  \item \code{countrycode_dict$groupget(x)} get the character vector of members for country group x (e.g. x='EA')
  \item \code{countrycode_dict$groupset(x, value)} set the character vector of members for country group x (e.g. x='EA') equal to value
}
}
\section{How country codes are stored and can be adjusted}{


The data.frame returned by \code{countrycode_dict$get()} holds column names that conform to the code groups detailed in \code{\link{ccode}}.
converting from one column to the other (e.g. from ECB to iso3c) looks up which line corresponds to the wanted code in the origin column, and then
returns the code from the same line in the destination column. I.e. \code{ccode('FR','ecb','iso3c')} finds 'FR' in column ECB and consequently finds
'FRA' in the same line, column \code{iso3c}.


If there are multiple (mostly deprecated) unique codes for an origin, the data.frame stores these separated by \code{|}, such as 'ROU|ROM' for Romania.
Only the first one of these is used for finding destination codes.
This way \code{ccode('ROU','iso3c','name')} returns 'Romania' just like \code{ccode('ROM','iso3c','name')}. Yet \code{ccode('Romania','name','iso3c')} always returns 'ROU'.


If there are multiple (mostly deprecated) codes for a target, then all but one of these are appended by %, such as EUR% for Montenegro's currency.
This way \code{ccode('Montenegro','name','ccy')} returns EUR, but \code{ccode('EUR','ccy','name')} returns 'Euro area'.


Names are a special type of column: any column name like \code{name.XX} is paired with a column name like \code{regex.XX}. XX typically
corresponds to a language code such as 'en'.
If \code{name.XX} is the destination column (As in \code{ccode('FR','ecb','name.en')}), things are as before.
But if \code{name.XX}  is the origin (as in \code{ccode('France','name','ecb')}) than instead \code{regex.XX} is applied to find the right line.
Thus \code{ccode(c('China incl. Hong Kong','Taiwan, province of China'),'name','iso2c')} returns \code{CN} and \code{TW}.
}

\section{How country group members are stored and can be adjusted}{


 Each country group used in \code{\link{cgrp}} is a named character vector, such as \code{c('CA'='1995-01-01','US'='1995-01-01','MX'='1995-01-01')}.
 The name of each element is a 2-letter country code (ECB/iso2c format).
 The value of each element is the entry data of the country into the country group (as a character like '1999-04-26').
 The leaving a country group (like Brexit) is denoted by prefixing the country code with an exclamation mark, as in \code{'!GB'='2020-01-31'}.

 You can get the named vector for a group like this: \code{countrycode_dict$groupget('ASEAN')}
 You can set the named vector for a (new) group like this: \code{'NAFTA',c('CA'='1995-01-01','US'='1995-01-01','MX'='1995-01-01'))}
 Note that you can use shorthand as well: \code{countrycode_dict$groupset('NAFTA',c('CA','US','MX'))} assumes all NAFTA members joined in 1901
}

\examples{
mydict= countrycode_dict$get()
mydict["AT","name.en"] = "Republic of Austria" #change country name for Austria
countrycode_dict$set(mydict) #update the conversion table to a custom-made version
ccode("Austria","name","name")

#countrycode_dict$update() #update the dictionary files to the latest version

#how to set a country group:
countrycode_dict$groupset('NAFTA',c('CA','MX','US'))
#now use the group
cgrp('NAFTA')


}
\seealso{
\code{\link{ccode}}, \code{\link{cgrp}}
}
\keyword{datasets}
